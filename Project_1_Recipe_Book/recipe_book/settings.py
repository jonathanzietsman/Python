"""
Django settings for recipe_book project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os  # Used for building file paths like MEDIA_ROOT

# BASE_DIR is the root directory of your Django project
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
# This key is used to provide cryptographic signing for security features
SECRET_KEY = 'django-insecure-er2%yiddr9*cr-5)!*xl$bup_=y33=#9s&^a&!f8^awuh!n^ue'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG=True is useful in development to show detailed error messages
DEBUG = True

# Hosts/domain names that are allowed to access the site
# In production, set this to your domain or IP address
ALLOWED_HOSTS = []


# Application definition

# List of installed apps (both built-in and custom apps)
INSTALLED_APPS = [
    'django.contrib.admin',            # Admin panel
    'django.contrib.auth',             # User authentication system
    'django.contrib.contenttypes',     # Handles content type framework
    'django.contrib.sessions',         # Session framework
    'django.contrib.messages',         # Messaging framework
    'django.contrib.staticfiles',      # Manages static files like CSS/JS
    'reci_app',                        # Custom app for the recipe_book project
]

# Middleware is a series of hooks into Django’s request/response processing
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',   # Manages user sessions
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',              # Protects against CSRF attacks
    'django.contrib.auth.middleware.AuthenticationMiddleware',# Associates users with requests
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # Protects against clickjacking
]

# URL configuration for the project
ROOT_URLCONF = 'recipe_book.urls'

# Template settings – tells Django where to look for HTML templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'reci_app' / 'templates'],  # Custom template directory
        'APP_DIRS': True,                               # Look for templates in each app's "templates" folder
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',  # Adds `request` to the context
                'django.contrib.auth.context_processors.auth', # Adds `user` to the context
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI application entry point (used by web servers)
WSGI_APPLICATION = 'recipe_book.wsgi.application'


# Database configuration
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',     # Using SQLite as the database
        'NAME': BASE_DIR / 'db.sqlite3',            # Database file location
    }
}


# Password validation – adds security rules to user passwords
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', # Prevents using personal info
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',           # Sets a minimum password length
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',          # Prevents common passwords
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',         # Prevents fully numeric passwords
    },
]


# Internationalization settings
LANGUAGE_CODE = 'en-us'     # Default language
TIME_ZONE = 'UTC'           # Default timezone
USE_I18N = True             # Enables Django’s translation system
USE_TZ = True               # Enables timezone-aware datetimes


# Static files (CSS, JavaScript, Images) settings
STATIC_URL = 'static/'  # URL to access static files

# Media files (uploads like images or documents)
MEDIA_URL = '/media/'   # URL to access media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Directory to store uploaded media


# Primary key field type used for models
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  # Recommended default for primary keys


# Redirect URLs after login and logout
LOGIN_REDIRECT_URL = '/categories/'        # Where to redirect users after successful login
LOGOUT_REDIRECT_URL = '/accounts/login/'   # Where to redirect users after logout
